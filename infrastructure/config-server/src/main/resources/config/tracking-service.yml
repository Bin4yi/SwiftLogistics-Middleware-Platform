server:
  port: 8084

spring:
  # Database configuration
  datasource:
    url: jdbc:h2:mem:trackingdb
    driver-class-name: org.h2.Driver
    username: sa
    password: password
  
  h2:
    console:
      enabled: true
      path: /h2-console
  
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
  
  # Redis configuration
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
  
  # RabbitMQ configuration
  rabbitmq:
    host: localhost
    port: 5672
    username: swiftlogistics
    password: logistics123

# Eureka Configuration
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
    healthcheck:
      enabled: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    hostname: localhost
    instance-id: ${spring.application.name}:${server.port}

# Management endpoints
management:
  endpoints:
    web:
      exposure:
        include: health,info,mappings,metrics
  endpoint:
    health:
      show-details: always

# Logging
logging:
  level:
    com.swiftlogistics.tracking: DEBUG
    com.netflix.eureka: INFO
    com.netflix.discovery: INFO
  pattern:
    console: "%d{HH:mm:ss} [Tracking-Service] %-5level %logger{36} - %msg%n"

# Application Info
info:
  app:
    name: SwiftLogistics Tracking Service
    description: Real-time tracking and notification service
    version: 1.0.0