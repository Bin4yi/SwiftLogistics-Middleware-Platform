server:
  port: 8080

spring:
  application:
    name: api-gateway

  cloud:
    config:
      import-check:
        enabled: false
    gateway:
      globalcors:
        cors-configurations:
          '[/**]':
            allowed-origin-patterns: "*"
            allowed-methods: "*"
            allowed-headers: "*"
            allow-credentials: true
            max-age: 3600
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
          predicates:
            - name: Path
              args:
                pattern: "'/api/' + serviceId + '/**'"
          filters:
            - name: StripPrefix
              args:
                parts: 1

  # Redis Configuration for Rate Limiting
  redis:
    host: localhost
    port: 6379
    timeout: 2000ms
    database: 1

# Eureka Configuration
eureka:
  client:
    enabled: true
    service-url:
      defaultZone: http://localhost:8761/eureka/
    fetch-registry: true
    register-with-eureka: true
  instance:
    prefer-ip-address: true
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90

# Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,metrics,prometheus
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# Circuit Breaker Configuration
resilience4j:
  circuitbreaker:
    instances:
      order-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
      integration-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      tracking-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50
      driver-service-cb:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 10s
        failureRateThreshold: 50

# Logging Configuration
logging:
  pattern:
    console: "%d{HH:mm:ss} [API-Gateway] %-5level %logger{36} - %msg%n"
  level:
    org.springframework.cloud.gateway: DEBUG
    com.swiftlogistics.gateway: DEBUG

---
# Docker Profile
spring:
  profiles: docker
  redis:
    host: redis
eureka:
  client:
    service-url:
      defaultZone: http://eureka-server:8761/eureka/