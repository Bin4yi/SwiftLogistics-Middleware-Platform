server:
  port: 8080

spring:
  application:
    name: api-gateway

  cloud:
    gateway:
      discovery:
        locator:
          enabled: false  # DISABLE automatic discovery to avoid DNS issues
      globalcors:
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders: "*"
            allowCredentials: true
            maxAge: 3600
      routes:
        # DIRECT IP-BASED ROUTING - NO DNS RESOLUTION NEEDED

        # Order Service Routes - Direct IP
        - id: order-service-api
          uri: http://localhost:8081  # Direct URL instead of lb://
          predicates:
            - Path=/api/orders/**

        # Integration Service Routes - Direct IP
        - id: integration-service-api
          uri: http://localhost:8082  # Direct URL instead of lb://
          predicates:
            - Path=/api/integration/**

        # Integration Service Mock Routes - Direct IP
        - id: integration-service-mock
          uri: http://localhost:8082  # Direct URL instead of lb://
          predicates:
            - Path=/mock/**

        # Tracking Service Routes - Direct IP
        - id: tracking-service-api
          uri: http://localhost:8084  # Direct URL instead of lb://
          predicates:
            - Path=/api/tracking/**

        # Driver Service Routes - Direct IP
        - id: driver-service-api
          uri: http://localhost:8083  # Direct URL instead of lb://
          predicates:
            - Path=/api/drivers/**

    config:
      import-check:
        enabled: false

# MINIMAL EUREKA CONFIG - JUST FOR MONITORING
eureka:
  client:
    enabled: false  # DISABLE Eureka client to avoid DNS issues
    register-with-eureka: false
    fetch-registry: false

# Management and Actuator
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway,routes
  endpoint:
    health:
      show-details: always
    gateway:
      enabled: true

# Logging
logging:
  level:
    com.swiftlogistics.gateway: DEBUG
    org.springframework.cloud.gateway: INFO
    reactor.netty.http.client: INFO
    io.netty.resolver: INFO
  pattern:
    console: "%d{HH:mm:ss} [API-Gateway] %-5level %logger{36} - %msg%n"

---
# Docker Profile - For containerized deployment
spring:
  profiles: docker
  cloud:
    gateway:
      routes:
        # Docker service names instead of localhost
        - id: order-service-api
          uri: http://order-service:8081
          predicates:
            - Path=/api/orders/**

        - id: integration-service-api
          uri: http://integration-service:8082
          predicates:
            - Path=/api/integration/**

        - id: integration-service-mock
          uri: http://integration-service:8082
          predicates:
            - Path=/mock/**

        - id: tracking-service-api
          uri: http://tracking-service:8084
          predicates:
            - Path=/api/tracking/**

        - id: driver-service-api
          uri: http://driver-service:8083
          predicates:
            - Path=/api/drivers/**