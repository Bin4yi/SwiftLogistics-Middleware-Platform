server:
  port: 8083

spring:
  application:
    name: driver-service

  cloud:
    config:
      import-check:
        enabled: false

  # Database Configuration
  datasource:
    url: jdbc:h2:mem:driverdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    driver-class-name: org.h2.Driver
    username: sa
    password: password

  # JPA Configuration
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    defer-datasource-initialization: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  # SQL Initialization - FIXED
  sql:
    init:
      mode: always
      defer-datasource-initialization: true
      schema-locations: classpath:schema.sql
      data-locations: classpath:data.sql
      separator: ;
      continue-on-error: false

  # H2 Console
  h2:
    console:
      enabled: true
      path: /h2-console
      settings:
        web-allow-others: true

  # RabbitMQ Configuration - FALLBACK
  rabbitmq:
    host: localhost
    port: 5672
    username: swiftlogistics
    password: logistics123
    virtual-host: /
    connection-timeout: 15000

# RabbitMQ Queue Configuration - FALLBACK
rabbitmq:
  exchanges:
    driver: driver.exchange
    tracking: tracking.exchange
    order: order.exchange
  queues:
    driver-assignment: driver.assignment.queue
    route-update: route.update.queue
    emergency-stop: emergency.stop.queue

logging:
  pattern:
    console: "%d{HH:mm:ss} [Driver-Service-LOCAL] %-5level %logger{36} - %msg%n"